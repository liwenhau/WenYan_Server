// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WenYan.Service.Entity;

#nullable disable

namespace WenYan.Service.Entity.Migrations
{
    [DbContext(typeof(GDbContext))]
    partial class GDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("WenYan.Service.Entity.Sys_Org", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasComment("是否删除");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("ModifyUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<string>("ParentId")
                        .HasColumnType("TEXT")
                        .HasComment("上级组织");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("ParentId");

                    b.ToTable("Sys_Org", t =>
                        {
                            t.HasComment("组织架构");
                        });

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Code = "Group",
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = "1",
                            Deleted = false,
                            ModifyTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyUserId = "1",
                            Name = "公司"
                        },
                        new
                        {
                            Id = "12",
                            Code = "Company",
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = "1",
                            Deleted = false,
                            ModifyTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyUserId = "1",
                            Name = "部门",
                            ParentId = "1"
                        },
                        new
                        {
                            Id = "121",
                            Code = "Dept",
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = "1",
                            Deleted = false,
                            ModifyTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyUserId = "1",
                            Name = "子部门",
                            ParentId = "12"
                        });
                });

            modelBuilder.Entity("WenYan.Service.Entity.Sys_User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("创建人");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasComment("是否删除");

                    b.Property<string>("HeadPortrait")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT")
                        .HasComment("头像");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("ModifyUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<string>("OrgId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("所属组织");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("密码");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("性别");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("个人签名");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("状态");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("OrgId");

                    b.ToTable("Sys_User", t =>
                        {
                            t.HasComment("系统用户");
                        });

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Code = "U0000",
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateUserId = "1",
                            Deleted = false,
                            HeadPortrait = "",
                            ModifyTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyUserId = "1",
                            Name = "Admin",
                            OrgId = "1",
                            Password = "1a50207b5dc3aade372204b6169bd01a",
                            Sex = "Boy",
                            Sign = "后台管理",
                            Status = "Enable",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WenYan.Service.Entity.Sys_Org", b =>
                {
                    b.HasOne("WenYan.Service.Entity.Sys_Org", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WenYan.Service.Entity.Sys_User", b =>
                {
                    b.HasOne("WenYan.Service.Entity.Sys_Org", "Org")
                        .WithMany()
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");
                });

            modelBuilder.Entity("WenYan.Service.Entity.Sys_Org", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
